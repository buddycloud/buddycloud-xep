<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE xep SYSTEM 'xep.dtd' [
  <!ENTITY % ents SYSTEM 'xep.ent'>
%ents;
]>
<?xml-stylesheet type='text/xsl' href='xep.xsl'?>
<xep>
<header>
  <title>Server Rosters</title>
  <abstract>This specification defines a convention for trust between XMPP server deployments.</abstract>
  &LEGALNOTICE;
  <number>xxxx</number>
  <status>ProtoXEP</status>
  <type>Standards Track</type>
  <sig>Standards</sig>
  <approver>Council</approver>
  <dependencies>
    <spec>XMPP Core</spec>
  </dependencies>
  <supersedes/>
  <supersededby/>
  <shortname>NOT_YET_ASSIGNED</shortname>
  <discuss>operators</discuss>
  <author>
    <firstname>Artur</firstname>
    <surname>Hefczyc</surname>
    <email>artur.hefczyc@gmail.com</email>
    <jid>artur.hefczyc@tigase.org</jid>
  </author>
  <author>
    <firstname>Florian</firstname>
    <surname>Jensen</surname>
    <email>admin@flosoft.biz</email>
    <jid>admin@im.flosoft.biz</jid>
  </author>
  <author>
    <firstname>Mickaël</firstname>
    <surname>Rémond</surname>
    <email>mickael.remond@process-one.net</email>
    <jid>mremond@process-one.net</jid>
  </author>
  &stpeter;
  <author>
    <firstname>Matthew</firstname>
    <surname>Wild</surname>
    <email>mwild1@gmail.com</email>
    <jid>mwild1@jaim.at</jid>
  </author>
  <revision>
    <version>0.0.1</version>
    <date>2009-04-30</date>
    <initials>ah/fj/psa/mr/mw</initials>
    <remark><p>First draft, split from the incident reporting proposal.</p></remark>
  </revision>
</header>

<section1 topic='Description' anchor='description'>
  <p>In XMPP, rosters and presence subscriptions have been used to date only among IM users (see &xmppim;). However, nothing prevents the application of these concepts to other XMPP entities, such as components and servers. Given that a presence subscription typically indicates some level of trust in a peer, server deployments can use the sharing of XMPP presence information as a way to indicate that a given server has a trust relationship with a peer server. The server might then share certain kinds of additional information only with trusted peers (for example, incident reports).</p>
  <p>To establish a trust relationship with a peer, a server shall send a presence subscription request to the peer, just as is done between XMPP users.</p>
  <example caption="Service sends subscription request to peer"><![CDATA[
<presence from='montague.lit'
          to='capulet.lit'
          type='subscribe'/>
  ]]></example>
  <p>A server MUST NOT send such a presence subscription request unless explicitly requested to do so by the server administrator(s).</p>
  <p>Upon receiving such a presence subscription request, the XMPP server software running at the peer MUST prompt the server administrator(s) to approve the request, rather than automatically approving it. Methods for doing so are out of scope for this specification.</p>
  <p>If the server administrator(s) approve the request, the peer server shall then inform the originating server that the request has been approved.</p>
  <example caption="Peer sends approval to server"><![CDATA[
<presence from='capulet.lit'
          to='montague.lit'
          type='subscribed'/>
  ]]></example>
  <p>The peer SHOULD also send a subscription request to the originating server.</p>
  <example caption="Peer sends subscription request to server"><![CDATA[
<presence from='capulet.lit'
          to='montague.lit'
          type='subscribe'/>
  ]]></example>
  <p>If an XMPP server implementation supports this usage of presence subscriptions, it MUST keep a list of approved entities, which we denote a "server roster". The implementation MAY use that roster for access control purposes defined in other specifications.</p>
</section1>

<section1 topic='Security Considerations' anchor='security'>
  <p>To follow.</p>
</section1>

<section1 topic='IANA Considerations' anchor='iana'>
  <p>This document requires no interaction with &IANA;.</p> 
</section1>

</xep>
