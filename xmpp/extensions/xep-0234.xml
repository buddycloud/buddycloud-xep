<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE xep SYSTEM 'xep.dtd' [
  <!ENTITY % ents SYSTEM 'xep.ent'>
%ents;
]>
<?xml-stylesheet type='text/xsl' href='xep.xsl'?>
<xep>
<header>
  <title>Jingle File Transfer</title>
  <abstract>This specification defines a Jingle application type for transferring files between two entities. The protocol provides a modular framework that enables the exchange of information about the file to be transferred as well as the negotiation of parameters such as the transport to be used.</abstract>
  &LEGALNOTICE;
  <number>0234</number>
  <status>Experimental</status>
  <type>Standards Track</type>
  <sig>Standards</sig>
  <dependencies>
    <spec>XMPP Core</spec>
    <spec>XEP-0047</spec>
    <spec>XEP-0065</spec>
    <spec>XEP-0096</spec>
    <spec>XEP-0166</spec>
  </dependencies>
  <supersedes/>
  <supersededby/>
  <shortname>NOT_YET_ASSIGNED</shortname>
  &stpeter;
  <revision>
    <version>0.12</version>
    <date>2011-01-05</date>
    <initials>psa</initials>
    <remark><p>Clarified usage of Jingle actions as well as several ambiguous points in the text, including use of the range feature from XEP-0096.</p></remark>
  </revision>
  <revision>
    <version>0.11</version>
    <date>2010-02-19</date>
    <initials>psa</initials>
    <remark><p>Added session-info message and namespace for communicating the file hash.</p></remark>
  </revision>
  <revision>
    <version>0.10</version>
    <date>2010-02-11</date>
    <initials>psa</initials>
    <remark><p>Described the file retrieval case; updated referenced namespaces.</p></remark>
  </revision>
  <revision>
    <version>0.9</version>
    <date>2009-02-19</date>
    <initials>psa</initials>
    <remark>
      <ul>
        <li>Moved Jingle definitions of S5B and IBB transports to standalone documents.</li>
        <li>Because the jingle-s5b and jingle-ibb transport methods are backward-incompatible, incremented protocol version number from 0 to 1 and changed namespace from urn:xmpp:jingle:apps:file-transfer:0 to urn:xmpp:jingle:apps:file-transfer:1.</li>
        <li>Moved transport fallback scenario to XEP-0260.</li>
      </ul>
    </remark>
  </revision>
  <revision>
    <version>0.8</version>
    <date>2008-09-30</date>
    <initials>psa</initials>
    <remark><p>Corrected fallback scenario to use transport-replace and transport-accept.</p></remark>
  </revision>
  <revision>
    <version>0.7</version>
    <date>2008-09-25</date>
    <initials>psa</initials>
    <remark>
      <ul>
        <li>Deleted content-replace from session flows.</li>
        <li>Modified namespaces to incorporate namespace versioning.</li>
        <li>Cleaned up XML schemas.</li>
      </ul>
    </remark>
  </revision>
  <revision>
    <version>0.6</version>
    <date>2008-07-31</date>
    <initials>psa</initials>
    <remark><p>Harmonized with XEP-0166; modified fallback to use transport-replace and transport-accept.</p></remark>
  </revision>
  <revision>
    <version>0.5</version>
    <date>2008-06-05</date>
    <initials>psa</initials>
    <remark><p>Modified fallback scenario to use content-replace action during pending state.</p></remark>
  </revision>
  <revision>
    <version>0.4</version>
    <date>2008-06-04</date>
    <initials>psa</initials>
    <remark><p>Harmonized negotiation flows with other Jingle application types.</p></remark>
  </revision>
  <revision>
    <version>0.3</version>
    <date>2008-05-29</date>
    <initials>psa</initials>
    <remark><p>Corrected and more clearly explained negotiation flows for consistency with XEP-0166 and other Jingle specifications.</p></remark>
  </revision>
  <revision>
    <version>0.2</version>
    <date>2008-03-20</date>
    <initials>psa</initials>
    <remark><p>Added transport negotiation scenario.</p></remark>
  </revision>
  <revision>
    <version>0.1</version>
    <date>2008-03-05</date>
    <initials>psa</initials>
    <remark><p>Initial published version.</p></remark>
  </revision>
  <revision>
    <version>0.0.3</version>
    <date>2008-02-29</date>
    <initials>psa</initials>
    <remark><p>Corrected use of content-replace action; specified that the In-Band Bytestreams transport method is mandatory-to-implement but must have the lowest preference order.</p></remark>
  </revision>
  <revision>
    <version>0.0.2</version>
    <date>2008-02-28</date>
    <initials>psa</initials>
    <remark>Modified negotiation flow to use new content-replace action.</remark>
  </revision>
  <revision>
    <version>0.0.1</version>
    <date>2008-01-29</date>
    <initials>psa</initials>
    <remark>First draft.</remark>
  </revision>
</header>

<section1 topic='Introduction' anchor='intro'>
  <p>&xep0096; was the original XMPP protocol extension for file transfer negotiation. However, that protocol has several drawbacks, most related to the &xep0095; protocol on which it depends:</p>
  <ol>
    <li>It does not enable a true, bidirectional negotiation; instead, the initiator sets the terms for the file transfer and the responder either accepts the terms or cancels the negotiation.</li>
    <li>It is the only technology in the Jabber/XMPP protocol "stack" that uses <cite>XEP-095: Stream Initiation</cite>. More modern technologies such as voice and video session negotiation use &xep0166;, and it would be helpful if implementors could re-use the same code for all negotiation use cases.</li>
  </ol>
  <p>To overcome these drawbacks, this specification defines a file transfer negotiation method that meets the following requirements:</p>
  <ul>
    <li>Reuse the session negotiation semantics from <cite>XEP-0166</cite>.</li>
    <li>Reuse the file description format from <cite>XEP-0096</cite>.</li>
    <li>Define a clear upgrade path from <cite>XEP-0096</cite> to this specification.</li>
  </ul>
  <p>Jingle file transfer is only as reliable as the transports on which it depends. In particular, SOCKS5 Bytestreams ("S5B") does not always result in NAT or firewall traversal. To work around that problem, this specification requires all implementations to support as a fallback mechanism In-Band Bytestreams ("IBB"), which usually results in a successful (if slow) file transfer.</p>
  <p>Note: It is likely that a future version of this specification will also recommend implementation of a Jingle transport method that emulates the IETF's ICE-TCP technology, which is currently a work in progress (see &ice-tcp;); however, a future Jingle ICE-TCP transport method is dependent on the outcome of IETF work in this area.</p>
</section1>

<section1 topic='How It Works' anchor='protocol'>
  <p>This section provides a friendly introduction to Jingle file transfer.</p>
  <p>First, the party that wishes to initiate the file transfer determines the responder's capabilities (via &xep0030; or &xep0115;). Here we assume that the responder supports the following service discovery features:</p>
  <ul>
    <li>urn:xmpp:jingle:1 as described in XEP-0166</li>
    <li>urn:xmpp:jingle:apps:file-transfer:1 as defined in this document &NSVER;</li>
    <li>urn:xmpp:jingle:transports:s5b:1 as defined in &xep0260;</li>
    <li>urn:xmpp:jingle:transports:ibb:0 as defined in &xep0261;</li>
  </ul>
  <p>The initiator then sends a Jingle session-initiation request to a potential responder. The content-type of the request specifies two things:</p>
  <ol>
    <li>An application type of "urn:xmpp:jingle:apps:file-transfer:1". In particular, the &lt;description/&gt; element contains an &lt;offer/&gt; or &lt;request/&gt; element that in turn contains a &lt;file/&gt; element qualified by the existing 'http://jabber.org/protocol/si/profile/file-transfer' namespace from <cite>XEP-0096</cite>.</li>
    <li>An appropriate transport method. So far the suggested methods are jingle-s5b (<cite>XEP-0260</cite>) and, as a fallback, jingle-ibb (<cite>XEP-0261</cite>).</li>
  </ol>
  <p>Note: All attributes of the &lt;file/&gt; element are defined in XEP-0096, not in this specification.</p>
  <p>In this example, the initiator is &lt;romeo@montague.lit&gt;, the responder is &lt;juliet@capulet.lit&gt;, the application type is a file offer, and the transport method is jingle-s5b.</p>
  <p>The flow is as follows.</p>
  <code><![CDATA[
Initiator                    Responder
   |                             |
   |   session-initiate          |
   |   (with S5B)                |
   |---------------------------->|
   |   ack                       |
   |<----------------------------|
   |   session-accept            |
   |<----------------------------|
   |   ack                       |
   |---------------------------->|
   |   [ file transfer ]         |
   |============================>|
   |   session-terminate         |
   |<----------------------------|
   |   ack                       |
   |---------------------------->|
   |                             |
  ]]></code>
  <p>First the initiator sends a Jingle session-initiate.</p>
  <example caption="Initiator sends session-initiate"><![CDATA[
<iq from='romeo@montague.lit/orchard'
    id='nzu25s8'
    to='juliet@capulet.lit/balcony'
    type='set'>
  <jingle xmlns='urn:xmpp:jingle:1'
          action='session-initiate'
          initiator='romeo@montague.lit/orchard'
          sid='851ba2'>
    <content creator='initiator' name='a-file-offer'>
      <description xmlns='urn:xmpp:jingle:apps:file-transfer:1'>
        <offer>
          <file xmlns='http://jabber.org/protocol/si/profile/file-transfer'
                date='1969-07-21T02:56:15Z'
                hash='552da749930852c69ae5d2141d3766b1'
                name='test.txt'
                size='1022'>
            <desc>This is a test. If this were a real file...</desc>
            <range/>
          </file>
        </offer>
      </description>
      <transport xmlns='urn:xmpp:jingle:transports:s5b:1'
        	 mode='tcp'
                 sid='vj3hs98y'>
        <streamhost 
            host='192.168.4.1' 
            jid='romeo@montague.lit/orchard' 
            port='5086'/>
        <streamhost 
            host='24.24.24.1' 
            jid='streamer.shakespeare.lit' 
            type='proxy'
            zeroconf='_jabber.bytestreams'/>
      </transport>
    </content>
  </jingle>
</iq>
  ]]></example>
  <p>Note: Inclusion of the &lt;range/&gt; child of the &lt;file/&gt; element indicates that the initiatior supports ranged transfers as described below under <link url='#range'>Ranged Transfers</link>.</p>
  <p>Note: Computing the hash of the file before sending it can slow down the process of file transfer, since the sending application needs to process the file twice. The sender might prefer to send the hash after the file transfer has begun, using a transport-info message as described under <link url='#hash'>Communicating the Hash</link>.</p>
  <p>The responder immediately acknowledges receipt of the Jingle session-initiate.</p>
  <example caption="Responder acknowledges session-initiate"><![CDATA[
<iq from='juliet@capulet.lit/balcony'
    id='nzu25s8'
    to='romeo@montague.lit/orchard'
    type='result'/>
  ]]></example>
  <p>The initiator then attempts to initiate a SOCKS5 Bytestream with the responder as described in <cite>XEP-0260</cite> and <cite>XEP-0065</cite>.</p>
  <p>If the responder is able to connect to one of the streamhosts, it returns a Jingle session-accept (including only the JID of the streamhost to which it connected).</p>
  <example caption="Responder sends session-accept"><![CDATA[
<iq from='juliet@capulet.lit/balcony'
    id='jn2vs71g'
    to='romeo@montague.lit/orchard'
    type='set'>
  <jingle xmlns='urn:xmpp:jingle:1'
          action='session-accept'
          initiator='romeo@montague.lit/orchard'
          sid='851ba2'>
    <content creator='initiator' name='a-file-offer'>
      <description xmlns='urn:xmpp:jingle:apps:file-transfer:1'>
        <offer>
          <file xmlns='http://jabber.org/protocol/si/profile/file-transfer'
                name='test.txt'
                size='1022'
                hash='552da749930852c69ae5d2141d3766b1'
                date='1969-07-21T02:56:15Z'>
            <desc>This is a test. If this were a real file...</desc>
            <range/>
          </file>
        </offer>
      </description>
      <transport xmlns='urn:xmpp:jingle:transports:s5b:1'>
        <streamhost-used jid='streamer.shakespeare.lit'/>
      </transport>
    </content>
  </jingle>
</iq>
  ]]></example>
  <p>Note: Inclusion of the &lt;range/&gt; child of the &lt;file/&gt; element indicates that the receiver also supports ranged transfers as described below under <link url='#range'>Ranged Transfers</link>.</p>
  <p>The initiator acknowledges the Jingle session-accept.</p>
  <example caption="Initiator acknowledges session-accept"><![CDATA[
<iq from='romeo@montague.lit/orchard'
    id='jn2vs71g'
    to='juliet@capulet.lit/balcony'
    type='result'/>
  ]]></example>
  <p>Now the parties exchange the file using the negotiated transport (here, SOCKS5 Bytestreams).</p>
  <p>Once the transfer is completed, either party can terminate the Jingle session; preferably this is done by the entity that receives the file to ensure that the complete file (up to the advertised size) has been received.</p>
  <example caption="Receiver sends session-terminate"><![CDATA[
<iq from='juliet@capulet.lit/balcony'
    id='og61bvs98'
    to='romeo@montague.lit/orchard'
    type='set'>
  <jingle xmlns='urn:xmpp:jingle:1'
          action='session-terminate'
          sid='a73sjjvkla37jfea'>
    <reason>
      <success/>
    </reason>
  </jingle>
</iq>
  ]]></example>
  <p>For a description of the transport fallback scenario (from SOCK5 Bytestreams to In-Band Bytestreams), refer to <cite>XEP-0260</cite>.</p>
</section1>

<section1 topic='Communicating the Hash' anchor='hash'>
  <p>At any time during the lifetime of the file transfer session, the hosting entity can communicate the hash of the file to the receiving entity. This is done by sending a session-info message containing a &lt;hash/&gt; element qualified by the 'urn:xmpp:jingle:apps:file-transfer:info:1' namespace. The XML character data of this &lt;hash/&gt; element has the same meaning as the 'hash' attribute of the &lt;file/&gt; element qualified by the 'http://jabber.org/protocol/si/profile/file-transfer' namespace from <cite>XEP-0096</cite>; that is, it is a checksum of the file contents produced in accordance with the hashing function specified by the 'algo' attribute, which MUST be one of the functions listed in the &ianahashes;. For historical reasons and for backward-compatibility with <cite>XEP-0096</cite>, the 'algo' attribute defaults to a value of "md5".</p>
  <example caption="Receiver sends session-terminate"><![CDATA[
<iq from='romeo@montague.lit/orchard'
    id='kqh401b5'
    to='juliet@capulet.lit/balcony'
    type='set'>
  <jingle xmlns='urn:xmpp:jingle:1'
          action='session-info'
          initiator='romeo@montague.lit/orchard'
          sid='a73sjjvkla37jfea'>
    <hash xmlns='urn:xmpp:jingle:apps:file-transfer:info:1'>552da749930852c69ae5d2141d3766b1</hash>
  </jingle>
</iq>
  ]]></example>
</section1>

<section1 topic='Requesting a File' anchor='request'>
  <p>If the entity that hosts a file has advertised its existence (or if a previous file transfer attempt has failed and the receiver would like to initiate another attempt), the entity that wishes to receive the file can "pull" the file from the hosting entity. This is done by sending a Jingle session-initiate to the hosting entity, including a &DESCRIPTION; element qualified by the 'urn:xmpp:jingle:apps:file-transfer:1' namespace and containing a &lt;request/&gt; element that defines the requested file.</p>
  <example caption="Receiver requests hosted file"><![CDATA[
<iq from='juliet@capulet.lit/balcony'
    id='wsn361c3'
    to='romeo@montague.lit/orchard'
    type='set'>
  <jingle xmlns='urn:xmpp:jingle:1'
          action='session-initiate'
          initiator='romeo@montague.lit/orchard'
          sid='uj3b2'>
    <content creator='initiator' name='a-file-request'>
      <description xmlns='urn:xmpp:jingle:apps:file-transfer:1'>
        <request>
          <file xmlns='http://jabber.org/protocol/si/profile/file-transfer'
                hash='552da749930852c69ae5d2141d3766b1'/>
        </request>
      </description>
      <transport xmlns='urn:xmpp:jingle:transports:s5b:1'
        	 mode='tcp'
                 sid='xig361fj'>
        <streamhost 
            host='24.24.24.2' 
            jid='proxy.capulet.lit' 
            type='proxy'/>
      </transport>
    </content>
  </jingle>
</iq>
  ]]></example>
  <p>The parties would then complete a session negotiation flow similar to that outlined above for offering a file.</p>
  <p>Note: If the requesting entity knows the hash of the file, then it can include only that metadata in its request. If not, the requesting entity needs to include enough metadata to uniquely identify the file, such as the date, name, and size. For similar considerations, see &rfc5547;.</p>
</section1>

<section1 topic='Ranged Transfers' anchor='range'>
  <p>As in <cite>XEP-0096</cite>, a transfer can include only part of a file (e.g., to restart delivery of a truncated transfer session at a point other than the start of the file). This is done using the &lt;range/&gt; element from <cite>XEP-0096</cite>. The usage is illustrated in the following examples.</p>
  <p>Let us imagine that the parties negotiate a file transfer session using, say, In-Band Bytestreams. During the transfer, the recipient goes offline unexpectedly and IBB stanzas from the sender to the recipient begin to bounce. When the recipient comes back online, the recipient could initiate a new Jingle session (to retrieve the file) and specify that it wants to receive all chunks after byte 270336 (which might be the 66th chunk of size 4096).</p>
  <example caption="Receiver requests hosted file, with range"><![CDATA[
<iq from='juliet@capulet.lit/balcony'
    id='wsn361c3'
    to='romeo@montague.lit/orchard'
    type='set'>
  <jingle xmlns='urn:xmpp:jingle:1'
          action='session-initiate'
          initiator='romeo@montague.lit/orchard'
          sid='uj3b2'>
    <content creator='initiator' name='a-file-request'>
      <description xmlns='urn:xmpp:jingle:apps:file-transfer:1'>
        <request>
          <file xmlns='http://jabber.org/protocol/si/profile/file-transfer'
                hash='552da749930852c69ae5d2141d3766b1'>
            <range offset='270336'/>
          </file>
        </request>
      </description>
      <transport xmlns='urn:xmpp:jingle:transports:s5b:1'
        	 mode='tcp'
                 sid='xig361fj'>
        <streamhost 
            host='24.24.24.2' 
            jid='proxy.capulet.lit' 
            type='proxy'/>
      </transport>
    </content>
  </jingle>
</iq>
  ]]></example>
  <p>Alternatively, the sender could initiate a new file transfer, indicating that it supports ranged transfers, and in the Jingle session-accept message the receiver could indicate that it wants the transfer to begin at the specified offset.</p>
</section1>

<section1 topic='Use of Jingle Actions' anchor='jingle'>
  <p>Jingle file transfer uses only a few of the actions defined in XEP-0166. Jingle usage is summarized in the following table.</p>
  <table caption='Jingle Actions Used in File Transfer'>
    <tr>
      <th>Action</th>
      <th>Use</th>
    </tr>
    <tr>
      <td>content-accept</td> 
      <td>Unused</td>
    </tr>
    <tr>
      <td>content-add</td> 
      <td>Unused</td>
    </tr>
    <tr>
      <td>content-modify</td> 
      <td>Unused</td>
    </tr>
    <tr>
      <td>content-reject</td> 
      <td>Unused</td>
    </tr>
    <tr>
      <td>content-remove</td> 
      <td>Unused</td>
    </tr>
    <tr>
      <td>description-info</td> 
      <td>Unused</td>
    </tr>
    <tr>
      <td>security-info</td> 
      <td>Unused</td>
    </tr>
    <tr>
      <td>session-accept</td> 
      <td>Accepting a file offer or request</td>
    </tr>
    <tr>
      <td>session-info</td> 
      <td>Communication of the file hash</td>
    </tr>
    <tr>
      <td>session-initiate</td> 
      <td>Initiating a file offer or request</td>
    </tr>
    <tr>
      <td>session-terminate</td> 
      <td>Ending a file transfer session</td>
    </tr>
    <tr>
      <td>transport-accept</td> 
      <td>Accepting fallback from S5B to IBB</td>
    </tr>
    <tr>
      <td>transport-info</td> 
      <td>Unused</td>
    </tr>
    <tr>
      <td>transport-reject</td> 
      <td>Rejecting fallback from S5B to IBB</td>
    </tr>
    <tr>
      <td>transport-replace</td> 
      <td>Fallback from S5B to IBB</td>
    </tr>
  </table>
</section1>

<section1 topic='Implementation Notes' anchor='impl'>
  <section2 topic='Mandatory to Implement Technologies' anchor='impl-mti'>
    <p>All implementations MUST support the Jingle In-Band Bytestreams Transport Method (<cite>XEP-0261</cite>) as a reliable method of last resort. An implementation SHOULD support other transport methods as well, especially the Jingle SOCKS5 Bytestreams Transport Method (<cite>XEP-0260</cite>).</p>
  </section2>
  <section2 topic='Preference Order of Transport Methods' anchor='impl-pref'>
    <p>An application MAY present transport methods in any order, except that the Jingle In-Band Bytestreams Transport Method MUST be the lowest preference.</p>
  </section2>
  <section2 topic='Migration from XEP-0096' anchor='impl-migration'>
    <p>Support for Jingle file transfer can be determined through discovery of the 'urn:xmpp:jingle:apps:file-transfer:1' namespace &VNOTE;, via either service discovery (<cite>XEP-0030</cite>) or entity capabilities (<cite>XEP-0115</cite>). If the initiator knows that the responder supports Jingle file transfer, it SHOULD first attempt negotiation using Jingle rather than SI.</p>
  </section2>
</section1>

<section1 topic='Security Considerations' anchor='security'>
  <p>For historical reasons and for backward-compatibility with XEP-0096, the hashing algorithm used in computing the file checksum defaults to MD5. It is RECOMMENDED for implementations to use stronger hashing algorithms.</p>
  <p>In order to secure the data stream, implementations SHOULD use encryption methods appropriate to the transport method being used. For example, end-to-end encryption can be negotiated over either SOCKS5 Bytestreams or In-Band Bytestreams as described in <cite>XEP-0260</cite> and <cite>XEP-0261</cite>.</p>
  <p>Refer to <cite>XEP-0047</cite>, <cite>XEP-0065</cite>, <cite>XEP-0096</cite>, <cite>XEP-0260</cite>, and <cite>XEP-0261</cite> for related security considerations.</p>
</section1>

<section1 topic='IANA Considerations' anchor='iana'>
  <p>No interaction with &IANA; is required as a result of this document.</p>
</section1>

<section1 topic='XMPP Registrar Considerations' anchor='registrar'>
  <section2 topic='Protocol Namespaces' anchor='registrar-ns'>
    <p>This specification defines the following XML namespace:</p>
    <ul>
      <li>urn:xmpp:jingle:apps:file-transfer:1</li>
    </ul>
    <p>Upon advancement of this specification from a status of Experimental to a status of Draft, the &REGISTRAR; shall add the foregoing namespace to the registry located at &NAMESPACES;, as described in Section 4 of &xep0053;.</p>
  </section2>
  <section2 topic='Namespace Versioning' anchor='registrar-versioning'>
    &NSVER;
  </section2>
  <section2 topic='Jingle Application Formats' anchor='registrar-content'>
    <p>The XMPP Registrar shall include "file-transfer" in its registry of Jingle application formats. The registry submission is as follows:</p>
    <code><![CDATA[
<application>
  <name>file-transfer</name>
  <desc>Jingle sessions for the transfer of a file</desc>
  <transport>streaming</transport>
  <doc>XEP-0234</doc>
</application>
    ]]></code>
  </section2>
</section1>

<section1 topic='XML Schema' anchor='schema'>
  <section2 topic='File Transfer' anchor='schema-ft'>
    <code><![CDATA[
<?xml version='1.0' encoding='UTF-8'?>

<xs:schema
    xmlns:xs='http://www.w3.org/2001/XMLSchema'
    targetNamespace='urn:xmpp:jingle:apps:file-transfer:1'
    xmlns='urn:xmpp:jingle:apps:file-transfer:1'
    elementFormDefault='qualified'>

  <xs:import 
      namespace='http://jabber.org/protocol/si/profile/file-transfer'
      schemaLocation='http://www.xmpp.org/schemas/file-transfer.xsd'/>

  <xs:element name='description'>
    <xs:complexType>
      <xs:choice>
        <xs:element name='offer' type='fileTransferElementType'/>
        <xs:element name='request' type='fileTransferElementType'/>
      </xs:choice>
    </xs:complexType>
  </xs:element>

  <xs:complexType name='fileTransferElementType'>
    <xs:sequence xmlns:ft='http://jabber.org/protocol/si/profile/file-transfer'>
      <xs:element ref='ft:file'/>
    </xs:sequence>
  </xs:complexType>

</xs:schema>
    ]]></code>
  </section2>
  <section2 topic='File Transfer Info' anchor='schema-info'>
    <code><![CDATA[
<?xml version='1.0' encoding='UTF-8'?>

<xs:schema
    xmlns:xs='http://www.w3.org/2001/XMLSchema'
    targetNamespace='urn:xmpp:jingle:apps:file-transfer:info:1'
    xmlns='urn:xmpp:jingle:apps:file-transfer:info:1'
    elementFormDefault='qualified'>

  <xs:element name='hash' type='xs:string'/>

</xs:schema>
    ]]></code>
  </section2>
</section1>

<section1 topic='Acknowledgements' anchor='ack'>
  <p>Thanks to Steffen Larsen, Marcus Lundblad, Joe Maissel, Ali Sabil, Matthew Wild, and Jiří Zárevúcky for their feedback.</p>
</section1>

</xep>
